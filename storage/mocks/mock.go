// Code generated by MockGen. DO NOT EDIT.
// Source: storage.go

// Package mock_storage is a generated GoMock package.
package mock_storage

import (
	reflect "reflect"

	models "github.com/arystanbek2002/websocket-group-messenger/models"
	gomock "github.com/golang/mock/gomock"
)

// MockStorage is a mock of Storage interface.
type MockStorage struct {
	ctrl     *gomock.Controller
	recorder *MockStorageMockRecorder
}

// MockStorageMockRecorder is the mock recorder for MockStorage.
type MockStorageMockRecorder struct {
	mock *MockStorage
}

// NewMockStorage creates a new mock instance.
func NewMockStorage(ctrl *gomock.Controller) *MockStorage {
	mock := &MockStorage{ctrl: ctrl}
	mock.recorder = &MockStorageMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockStorage) EXPECT() *MockStorageMockRecorder {
	return m.recorder
}

// CreateDirect mocks base method.
func (m *MockStorage) CreateDirect(arg0 *models.Direct) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateDirect", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreateDirect indicates an expected call of CreateDirect.
func (mr *MockStorageMockRecorder) CreateDirect(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateDirect", reflect.TypeOf((*MockStorage)(nil).CreateDirect), arg0)
}

// CreateMessage mocks base method.
func (m *MockStorage) CreateMessage(arg0 *models.Message) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateMessage", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreateMessage indicates an expected call of CreateMessage.
func (mr *MockStorageMockRecorder) CreateMessage(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateMessage", reflect.TypeOf((*MockStorage)(nil).CreateMessage), arg0)
}

// CreateUser mocks base method.
func (m *MockStorage) CreateUser(arg0 *models.User) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateUser", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreateUser indicates an expected call of CreateUser.
func (mr *MockStorageMockRecorder) CreateUser(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateUser", reflect.TypeOf((*MockStorage)(nil).CreateUser), arg0)
}

// GetDirectByID mocks base method.
func (m *MockStorage) GetDirectByID(arg0 int) (*models.Direct, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetDirectByID", arg0)
	ret0, _ := ret[0].(*models.Direct)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetDirectByID indicates an expected call of GetDirectByID.
func (mr *MockStorageMockRecorder) GetDirectByID(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetDirectByID", reflect.TypeOf((*MockStorage)(nil).GetDirectByID), arg0)
}

// GetDirectByUsers mocks base method.
func (m *MockStorage) GetDirectByUsers(arg0, arg1 int) (*models.Direct, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetDirectByUsers", arg0, arg1)
	ret0, _ := ret[0].(*models.Direct)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetDirectByUsers indicates an expected call of GetDirectByUsers.
func (mr *MockStorageMockRecorder) GetDirectByUsers(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetDirectByUsers", reflect.TypeOf((*MockStorage)(nil).GetDirectByUsers), arg0, arg1)
}

// GetDirects mocks base method.
func (m *MockStorage) GetDirects() ([]*models.Direct, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetDirects")
	ret0, _ := ret[0].([]*models.Direct)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetDirects indicates an expected call of GetDirects.
func (mr *MockStorageMockRecorder) GetDirects() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetDirects", reflect.TypeOf((*MockStorage)(nil).GetDirects))
}

// GetMessages mocks base method.
func (m *MockStorage) GetMessages() ([]*models.Message, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetMessages")
	ret0, _ := ret[0].([]*models.Message)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetMessages indicates an expected call of GetMessages.
func (mr *MockStorageMockRecorder) GetMessages() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetMessages", reflect.TypeOf((*MockStorage)(nil).GetMessages))
}

// GetMessagesByDirect mocks base method.
func (m *MockStorage) GetMessagesByDirect(arg0 int) ([]*models.Message, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetMessagesByDirect", arg0)
	ret0, _ := ret[0].([]*models.Message)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetMessagesByDirect indicates an expected call of GetMessagesByDirect.
func (mr *MockStorageMockRecorder) GetMessagesByDirect(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetMessagesByDirect", reflect.TypeOf((*MockStorage)(nil).GetMessagesByDirect), arg0)
}

// GetUser mocks base method.
func (m *MockStorage) GetUser(arg0 int) (*models.User, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetUser", arg0)
	ret0, _ := ret[0].(*models.User)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetUser indicates an expected call of GetUser.
func (mr *MockStorageMockRecorder) GetUser(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetUser", reflect.TypeOf((*MockStorage)(nil).GetUser), arg0)
}

// GetUsers mocks base method.
func (m *MockStorage) GetUsers() ([]*models.User, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetUsers")
	ret0, _ := ret[0].([]*models.User)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetUsers indicates an expected call of GetUsers.
func (mr *MockStorageMockRecorder) GetUsers() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetUsers", reflect.TypeOf((*MockStorage)(nil).GetUsers))
}

// LoginUser mocks base method.
func (m *MockStorage) LoginUser(arg0, arg1 string) (*models.User, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "LoginUser", arg0, arg1)
	ret0, _ := ret[0].(*models.User)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// LoginUser indicates an expected call of LoginUser.
func (mr *MockStorageMockRecorder) LoginUser(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "LoginUser", reflect.TypeOf((*MockStorage)(nil).LoginUser), arg0, arg1)
}
